swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes: #protocle 
  - http
paths:

  /user/account/{accountId}/transactions:
    get:
      tags:
      - Transactions
      security:
        - Bearer: []
      summary: Récupérer les transactions pour une carte bancaire spécifique
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant du compte bancaire utilisateur
        type: string
        required: true
      responses:
        '200':
          description: Requête réussie
          schema:
            $ref: '#/definitions/Transaction'
        '401': 
          description: Non autorisé (authentification requise)
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Accès refusé
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Ressource introuvable
          schema:
            $ref: '#/definitions/Error404'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/Error500'
          
    post:
      tags:
      - Transactions
      security:
        - Bearer: []
      summary: Créer une nouvelle transaction
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant du compte bancaire utilisateur
        type: string
        required: true
      - in: body
        name: body
        schema:
          $ref: "#/definitions/NewTransaction"
        required: true
      responses:
        '201':
          description: Création réussie
          schema:
            $ref: '#/definitions/Transaction'
          examples:
            application/json:
              id: "1265743"
              date: "18-11-2023"
              description: "Achat de carburant"
              amount: 50
              balance: 2452
        '400':
          description: Requête invalide
          examples:
            application/json:
              error: "La requête contient des données invalides"
        '401': 
          description: Non autorisé (authentification requise)
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Accès refusé
          schema:
            $ref: '#/definitions/Error403'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/Error500'
          
          
          
  /user/account/{accountId}/transactions/{transactionId}:
    get:
      tags:
          - Transactions
      security:
        - Bearer: []
      summary: Récupérer les détails d'une transaction spécifique
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant du compte bancaire utilisateur
        type: string
        required: true
      - in: path
        name: transactionId
        type: string
        required: true
        description: Identifiant de la transaction
      responses:
        '200':
          description: Requête réussie
          schema:
            $ref: "#/definitions/TransactionDetails"
        '401': 
          description: Non autorisé (authentification requise)
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Accès refusé
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Ressource introuvable
          schema:
            $ref: '#/definitions/Error404'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/Error500'
          
          
          
  /user/account/{accountId}/transactions/{transactionId}/category:
    put:
      tags:
          - Transactions
      security:
        - Bearer: []
      summary: Modifier la catégorie d'une transaction
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant du compte bancaire utilisateur
        type: string
        required: true
      - in: path
        name: transactionId
        type: string
        required: true
        description: Identifiant de la transaction
      - in: body
        name: body
        schema:
          $ref: "#/definitions/TransactionCategoryUpdate"
        required: true
      responses:
        '200':
          description: Modification réussie
          examples:
            application/json:
              message: "Catégorie de la transaction mise à jour avec succès"
        '400':
          description: Requête invalide
          examples:
            application/json:
              error: "La requête contient des données invalides"
        '401': 
          description: Non autorisé (authentification requise)
          schema:
            $ref: '#/definitions/Error401'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/Error500'
          
          
    delete:
      tags:
        - Transactions
      security:
        - Bearer: []
      summary: Supprimer la catégorie d'une transaction
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant du compte bancaire utilisateur
        type: string
        required: true
      - in: path
        name: transactionId
        type: string
        required: true
        description: Identifiant de la transaction
      responses:
        '204':
          description: Suppression réussie
        '400':
          description: Requête invalide
          examples:
            application/json:
              error: "La requête contient des données invalides"
        '401': 
          description: Non autorisé (authentification requise)
          schema:
            $ref: '#/definitions/Error401'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/Error500'   
          
          
          
  /user/account/{accountId}/transactions/{transactionId}/notes:        
    put:
      tags:
          - Transactions
      security:
        - Bearer: []
      summary: Modifier la note d'une transaction
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant du compte bancaire utilisateur
        type: string
        required: true
      - in: path
        name: transactionId
        type: string
        required: true
        description: Identifiant de la transaction
      - in: body
        name: body
        schema:
          $ref: "#/definitions/TransactionNotesUpdate"
        required: true
      responses:
        '200':
          description: Modification réussie
          examples:
            application/json:
              message: "Nouvelle note de la transaction mise à jour avec succès"
        '400':
          description: Requête invalide
          examples:
            application/json:
              error: "La requête contient des données invalides"
        '401': 
          description: Non autorisé (authentification requise)
          schema:
            $ref: '#/definitions/Error401'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/Error500'
          
          
        
    delete:
      tags:
        - Transactions
      security:
        - Bearer: []
      summary: Supprimer la note d'une transaction
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant du compte bancaire utilisateur
        type: string
        required: true
      - in: path
        name: transactionId
        type: string
        required: true
        description: Identifiant de la transaction
      responses:
        '204':
          description: Suppression réussie
        '400':
          description: Requête invalide
          examples:
            application/json:
              error: "La requête contient des données invalides"
        '401': 
          description: Non autorisé (authentification requise)
          schema:
            $ref: '#/definitions/Error401'
        '500':
          description: Erreur interne du serveur
          schema:
            $ref: '#/definitions/Error500'  
          
          
          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    
    
    
definitions:
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Identifiant unique de la transaction
        example: 1265743
      date:
        type: string
        format: date
        description: Date de la transaction
        example: 13-11-2023
      description:
        type: string
        description: Description de la transaction
        example: Achat sur Amazon
      amount:
        type: integer
        description: La somme de la transaction
        example: 1000
      balance:
        type: integer
        description: Le solde apres la transaction
        example: 2500
  
  Error401:
    type: object
    properties:
      error:
        type: integer
        description: Code d'erreur 401
        example: 401
      message:
        type: string
        description: Message d'erreur pour l'erreur 401
        example: Non autorisé (authentification requise)
  
  Error403:
    type: object
    properties:
      error:
        type: integer
        description: Code d'erreur 403
        example: 403
      message:
        type: string
        description: Message d'erreur pour l'erreur 403
        example: Accès refusé
        
  Error404:
    type: object
    properties:
      error:
        type: integer
        description: Code d'erreur 404
        example: 404
      message:
        type: string
        description: Message d'erreur pour l'erreur 404
        example: Ressource introuvable

  Error500:
    type: object
    properties:
      error:
        type: integer
        description: Code d'erreur 500
        example: 500
      message:
        type: string
        description: Message d'erreur pour l'erreur 500
        example: Erreur interne du serveur
  

  TransactionDetails:
    type: object
    properties:
      id:
        type: string
        description: Identifiant unique de la transaction
        example: 1265743
      date:
        type: string
        format: date
        description: Date de la transaction
        example: 18-11-2023
      category:
        type: string
        description: Catégorie de la transaction
        example: Food
      notes:
        type: string
        description: Notes de la transaction
        example: Achat à monoprix
      amount:
        type: number
        format: float
        description: Montant de la transaction
        example: 75
        
  NewTransaction:
    type: object
    properties:
      id:
        type: string
        description: Identifiant unique de la transaction
        example: 1265743
      date:
        type: string
        format: date
        description: Date de la nouvelle transaction
        example: 18-11-2023
      description:
        type: string
        description: Description de la nouvelle transaction
        example: Achat du carburant
      amount:
        type: number
        format: float
        description: Montant de la nouvelle transaction
        example: 50
        
        
  TransactionCategoryUpdate:
    type: object
    properties:
      category:
        type: string
        enum: [Food, Health Care, Insurance, Other]
        description: Nouvelle catégorie de la transaction
    required: 
      - category
      
      
  TransactionNotesUpdate:
    type: object
    properties:
      notes:
        type: string
        description: Nouvelle note de la transaction
        example: Achat cadeau anniversaire
    required:
      - notes